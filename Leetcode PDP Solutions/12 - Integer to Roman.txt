/**
 * Runtime: 6ms (Beats 21.78%)
 * Memory: 44.2MB (Beats 84.35%)
 */

class Solution {
    public String intToRoman(int num) {

        HashMap<Integer, String> hashMap = new HashMap<>();
            hashMap.put(1, "I");
            hashMap.put(4, "IV");
            hashMap.put(5, "V");
            hashMap.put(9, "IX");
            hashMap.put(10, "X");
            hashMap.put(40, "XL");
            hashMap.put(50, "L");
            hashMap.put(90, "XC");
            hashMap.put(100, "C");
            hashMap.put(400, "CD");
            hashMap.put(500, "D");
            hashMap.put(900, "CM");
            hashMap.put(1000, "M");

            int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
            StringBuilder roman = new StringBuilder();

            // using iterator across the array 
            for (int value : values) {
                // if the number is bigger than, or equal to the value, append one of the symbols and repeat
                while (num >= value) {
                    roman.append(hashMap.get(value));
                    num -= value;
                }
            }

            return roman.toString();
        

    }
}